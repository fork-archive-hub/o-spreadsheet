<templates>
  <t t-name="o-spreadsheet-GaugeChartDesignPanel" owl="1">
    <div>
      <div class="o-section p-4">
        <div class="o-section-title mb-2 fw-bold text-secondary">Background color</div>
        <div class="o-with-color-picker position-relative">
          Select a color...
          <span
            t-attf-style="border-color:{{props.definition.background}}"
            title="Background Color"
            t-on-click.stop="() => this.toggleMenu('backgroundColor', ev)">
            <t t-call="o-spreadsheet-Icon.FILL_COLOR"/>
          </span>
          <ColorPicker
            t-if="state.openedMenu === 'backgroundColor'"
            onColorPicked="(color) => this.updateBackgroundColor(color)"
            currentColor="props.definition.background"
            t-key="backgroundColor"
          />
        </div>
      </div>

      <div class="o-section o-chart-title p-4">
        <div class="o-section-title mb-2 fw-bold text-secondary">Title</div>
        <input
          type="text"
          t-att-value="props.definition.title"
          t-on-change="updateTitle"
          class="o-input o-optional w-100 border-0 border-bottom"
          placeholder="New Chart"
        />
      </div>

      <div class="o-section p-4">
        <div class="o-section-title mb-2 fw-bold text-secondary">Range</div>
        <div class="d-flex justify-content-between gap-1">
          <div class="o-subsection-left">
            <input
              type="text"
              t-att-value="props.definition.sectionRule.rangeMin"
              t-on-change="updateRangeMin"
              class="o-input o-data-range-min w-100 border-0 border-bottom"
              t-att-class="{ 'o-invalid border-danger': isRangeMinInvalid() }"
            />
          </div>
          <div class="o-subsection-right">
            <input
              type="text"
              t-att-value="props.definition.sectionRule.rangeMax"
              t-on-change="updateRangeMax"
              class="o-input o-data-range-max w-100 border-0 border-bottom"
              t-att-class="{ 'o-invalid border-danger': isRangeMaxInvalid() }"
            />
          </div>
        </div>
      </div>

      <div class="o-section p-4">
        <div class="o-section-title mb-2 fw-bold text-secondary">Thresholds</div>
        <t t-call="o-spreadsheet-GaugeChartColorSectionTemplate">
          <t t-set="sectionRule" t-value="props.definition.sectionRule"/>
        </t>
      </div>

      <div
        class="o-section o-sidepanel-error text-danger mt-2 p-4"
        t-if="designErrorMessages.length">
        <div t-foreach="designErrorMessages" t-as="error" t-key="error">
          <t t-esc="error"/>
        </div>
      </div>
    </div>
  </t>

  <t t-name="o-spreadsheet-GaugeChartColorSectionTemplate" owl="1">
    <div class="o-gauge-color-set">
      <div>
        <div class="d-flex justify-content-end align-items-center gap-0 my-2">
          <div class="o-gauge-color-set-colorPicker"/>
          <div class="o-gauge-color-set-text"/>
          <div class="o-gauge-color-set-value w-25">Value</div>
          <div class="o-gauge-color-set-type w-25">Type</div>
        </div>

        <t t-call="o-spreadsheet-GaugeChartColorSectionTemplateRow">
          <t t-set="sectionColor" t-value="sectionRule.colors.lowerColor"/>
          <t t-set="sectionType" t-value="'lowerColor'"/>
          <t t-set="inflectionPoint" t-value="sectionRule.lowerInflectionPoint"/>
          <t t-set="isInvalid" t-value="isLowerInflectionPointInvalid"/>
          <t t-set="inflectionPointName" t-value="'lowerInflectionPoint'"/>
        </t>

        <t t-call="o-spreadsheet-GaugeChartColorSectionTemplateRow">
          <t t-set="sectionColor" t-value="sectionRule.colors.middleColor"/>
          <t t-set="sectionType" t-value="'middleColor'"/>
          <t t-set="inflectionPoint" t-value="sectionRule.upperInflectionPoint"/>
          <t t-set="isInvalid" t-value="isUpperInflectionPointInvalid"/>
          <t t-set="inflectionPointName" t-value="'upperInflectionPoint'"/>
        </t>

        <div class="d-flex justify-content-start align-items-center gap-3 mb-2">
          <div class="flex-shrink-1 flex-grow-0">
            <div class="o-tools position-relative text-dark cursor-pointer d-flex">
              <div
                class="o-tool o-dropdown o-with-coloro-tool o-dropdown o-with-color position-relative d-flex align-items-center m-1 px-0 py-1">
                <span
                  title="Fill Color"
                  t-attf-style="border-color:{{sectionRule.colors.upperColor}}"
                  t-on-click.stop="(ev) => this.toggleMenu('sectionColor-upperColor', ev)">
                  <t t-call="o-spreadsheet-Icon.FILL_COLOR"/>
                </span>
                <ColorPicker
                  t-if="state.openedMenu === 'sectionColor-upperColor'"
                  onColorPicked="(color) => this.updateSectionColor('upperColor', color)"
                  currentColor="sectionRule.colors.upperColor"
                  dropdownDirection="'right'"
                />
              </div>
            </div>
          </div>
          <div>Else</div>
        </div>
      </div>
    </div>
  </t>

  <t t-name="o-spreadsheet-GaugeChartColorSectionTemplateRow" owl="1">
    <div class="d-flex justify-content-between align-items-center gap-3 mb-2">
      <div class="flex-shrink-1">
        <div class="o-tools position-relative text-dark cursor-pointer d-flex">
          <div
            class="o-tool o-dropdown o-with-coloro-tool o-dropdown o-with-color position-relative d-flex align-items-center m-1 px-0 py-1">
            <span
              title="Fill Color"
              t-attf-style="border-color:{{sectionColor}}"
              t-on-click.stop="(ev) => this.toggleMenu('sectionColor-'+sectionType, ev)">
              <t t-call="o-spreadsheet-Icon.FILL_COLOR"/>
            </span>
            <ColorPicker
              t-if="state.openedMenu === 'sectionColor-'+sectionType"
              onColorPicked="(color) => this.updateSectionColor(sectionType, color)"
              currentColor="sectionColor"
              dropdownDirection="'right'"
            />
          </div>
        </div>
      </div>
      <div class="flex-grow-1 flex-shrink-0">When value is below</div>
      <div class="flex-shrink-1">
        <input
          type="text"
          class="o-input h-100 w-100 border-0 border-bottom"
          t-on-change="(ev) => this.updateInflectionPointValue(inflectionPointName, ev)"
          t-attf-class="o-input-{{inflectionPointName}}"
          t-att-class="{ 'o-invalid border-danger': isInvalid }"
          t-model="inflectionPoint.value"
        />
      </div>
      <div class="flex-grow-1 flex-shrink-0">
        <select
          class="o-input h-100 w-100 border-0 border-bottom"
          name="valueType"
          t-model="inflectionPoint.type"
          t-on-change="(ev) => this.updateInflectionPointType(inflectionPointName, ev)">
          <option value="number">Number</option>
          <option value="percentage">Percentage</option>
        </select>
      </div>
    </div>
  </t>
</templates>
